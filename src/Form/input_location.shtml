<script type="text/javascript">

function initialize() {

  var markers = [];
  var map = new google.maps.Map(document.getElementById('${name}-canvas'), {
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  var defaultBounds = new google.maps.LatLngBounds(
      new google.maps.LatLng(44.5, -5),
      new google.maps.LatLng(49.5, +20));
  map.fitBounds(defaultBounds);

  // Create the search box and link it to the UI element.
  var input = document.getElementById('${canvas_id}');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  var searchBox = new google.maps.places.SearchBox(
    /** @type {HTMLInputElement} */(input));

  // [START region_getplaces]
  // Listen for the event fired when the user selects an item from the
  // pick list. Retrieve the matching places for that item.
//  google.maps.event.addListener(searchBox, 'places_changed', function() {
//    var places = searchBox.getPlaces();
//
//    if (places.length == 0) {
//      return;
//    }
//    for (var i = 0, marker; marker = markers[i]; i++) {
//      marker.setMap(null);
//    }
//
//    // For each place, get the icon, place name, and location.
//    markers = [];
//    var bounds = new google.maps.LatLngBounds();
//    for (var i = 0, place; place = places[i]; i++) {
//      var image = {
//        url: place.icon,
//        size: new google.maps.Size(71, 71),
//        origin: new google.maps.Point(0, 0),
//        anchor: new google.maps.Point(17, 34),
//        scaledSize: new google.maps.Size(25, 25)
//      };
//
//      // Create a marker for each place.
//      var marker = new google.maps.Marker({
//        map: map,
//        icon: image,
//        title: place.name,
//        position: place.geometry.location
//      });
//
//      markers.push(marker);
//      /// ==> CODE GOES HERE
//      bounds.extend(place.geometry.location);
//    }
//
//    map.fitBounds(bounds);
//  });
  // [END region_getplaces]

  // Bias the SearchBox results towards places that are within the bounds of the
  // current map's viewport.
  google.maps.event.addListener(map, 'bounds_changed', function() {
    var bounds = map.getBounds();
    searchBox.setBounds(bounds);
  });
}

	google.maps.event.addDomListener(window, 'load', initialize);

    </script>
				
	<style>
	.controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }
				
	  #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      .pac-container {
        font-family: Roboto;
      }
				
	</style>